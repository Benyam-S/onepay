package app

import (
	"errors"
	"time"

	"github.com/Benyam-S/onepay/entity"
	"github.com/Benyam-S/onepay/logger"
)

// ReclaimMoneyToken is a method that enables user to reclaim token that has been generated by the user
func (onepay *OnePay) ReclaimMoneyToken(code, userID string) error {

	moneyToken, err := onepay.MoneyTokenService.FindMoneyToken(code)
	if err != nil {
		return err
	}

	if moneyToken.SenderID != userID {
		return errors.New("cannot reclaim token which is not yours")
	}

	if moneyToken.Method != entity.MethodTransactionQRCode {
		return errors.New("cannot reclaim token, invalid method")
	}

	opWallet, err := onepay.WalletService.FindWallet(userID)
	if err != nil {
		return err
	}

	opWallet.Amount += moneyToken.Amount + GetTransactionFee(moneyToken.Amount)
	_, err = onepay.MoneyTokenService.DeleteMoneyToken(code)
	if err != nil {
		return err
	}

	/* ++++ ++++ ++++ ++++ ++++ ++ checkpoint - wallet ++ ++++ ++++ ++++ ++++ ++++ */
	tempOPWallet := new(entity.UserWallet)
	tempOPWallet.UserID = opWallet.UserID
	tempOPWallet.Amount = moneyToken.Amount + GetTransactionFee(moneyToken.Amount)
	logger.Must(onepay.Logger.LogWallet(tempOPWallet))
	/* ++++ ++++ ++++ ++++ ++++ ++++ ++++ ++++ ++++ ++++ ++++ ++++ ++++ ++++ +++++ */

	err = onepay.WalletService.UpdateWallet(opWallet)
	if err != nil {
		return errors.New(entity.WalletCheckpointError)
	}

	/* +++++ +++++ +++++ checkpoint end +++++ +++++ +++++ */
	logger.Must(onepay.Logger.RemoveWallet(tempOPWallet))
	/* ++++ ++++ ++++ ++++ ++++ ++++ ++++ ++++ ++++ +++++ */

	return nil
}

// RefreshMoneyToken is a method that enables user to refersh money token.
// In another word increase the life cycle of the money token
func (onepay *OnePay) RefreshMoneyToken(code, userID string) error {

	moneyToken, err := onepay.MoneyTokenService.FindMoneyToken(code)
	if err != nil {
		return err
	}

	if moneyToken.SenderID != userID {
		return errors.New("cannot refersh token which is not yours")
	}

	moneyToken.ExpirationDate = time.Now().Add(time.Hour * 48)

	err = onepay.MoneyTokenService.UpdateMoneyToken(moneyToken)
	if err != nil {
		return err
	}

	return nil

}

// RemoveMoneyToken is a method that enables user to remove token that has been generated by the user
// if itsn't a transaction token
func (onepay *OnePay) RemoveMoneyToken(code, userID string) error {

	moneyToken, err := onepay.MoneyTokenService.FindMoneyToken(code)
	if err != nil {
		return err
	}

	if moneyToken.SenderID != userID {
		return errors.New("cannot reclaim token which is not yours")
	}

	if moneyToken.Method != entity.MethodPaymentQRCode {
		return errors.New("cannot remove non payment qr code")
	}

	_, err = onepay.MoneyTokenService.DeleteMoneyToken(code)
	if err != nil {
		return err
	}

	return nil
}
